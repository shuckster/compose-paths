/*
 * compose-paths
 * v1.0.7
 * https://github.com/shuckster/compose-paths
 * License: MIT
 */
var f=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports);var p=f((h,r)=>{(function(n,e,s){typeof r!="undefined"&&r.exports?r.exports=s():typeof define=="function"&&define.amd?define(s):e[n]=s()})("urljoin",h,function(){function n(e){var s=[];if(e.length===0)return"";if(typeof e[0]!="string")throw new TypeError("Url must be a string. Received "+e[0]);if(e[0].match(/^[^/:]+:\/*$/)&&e.length>1){var i=e.shift();e[0]=i+e[0]}e[0].match(/^file:\/\/\//)?e[0]=e[0].replace(/^([^/:]+):\/*/,"$1:///"):e[0]=e[0].replace(/^([^/:]+):\/*/,"$1://");for(var l=0;l<e.length;l++){var t=e[l];if(typeof t!="string")throw new TypeError("Url must be a string. Received "+t);t!==""&&(l>0&&(t=t.replace(/^[\/]+/,"")),l<e.length-1?t=t.replace(/[\/]+$/,""):t=t.replace(/[\/]+$/,"/"),s.push(t))}var o=s.join("/");o=o.replace(/\/(\?|&|#[^!])/g,"$1");var u=o.split("?");return o=u.shift()+(u.length>0?"?":"")+u.join("&"),o}return function(){var e;return typeof arguments[0]=="object"?e=arguments[0]:e=[].slice.call(arguments),n(e)}})});var C=f((z,d)=>{d.exports={composePaths:v,zip:j};var P=p(),m="aliases";function v(n){let s=b(n).map($),i=s.reduce((c,{indent:a})=>Math.min(c,a),Infinity),l=s.map(({indent:c,content:a})=>({indent:c-i,content:a})),t=S(l),o=I(t);t.forEach(({name:c,index:a})=>{if(!c)return o;let g=o[a];Object.defineProperty(o,c,{value:g,enumerable:!1})});let u=t.filter(c=>!!(c==null?void 0:c.name)).map(c=>c.name);return Object.defineProperty(o,m,{value:u,enumerable:!1})}function j(n,e,s){let{aliases:i=[],ignoreAliases:l=!1}=s||{};return(i.length&&!l?i:n[m]).reduce((o,u)=>l&&i.includes(u)?o:[...o,[n[u],e[u]]],[])}var E=/[\r\n]/,O=/(\s*\/\/[^\n\r]*)/,R=/^(\s*)([^$]*)/,w=/\s*=\s*([^$]+)/,x=/^\s*$/;function I(n){let e=[],s=[],i=-1,l=-1;return n.forEach(({indent:t,content:o})=>{if(l<=0)l=t;else if(t<=i){let u=1+(i-t)/l;for(;u--;)e.pop()}e.push(o),s.push(P(...e)),i=t}),s}function S(n){return n.map((e,s)=>{let{content:i,indent:l}=e,t=i.match(w);return t?{index:s,indent:l,content:i.slice(0,i.length-t[0].length),name:t[1]}:{index:s,indent:l,content:i}})}function $(n){var i;let e=[n,"",n],s=(i=n.match(R))!=null?i:e;return{indent:s[1].length,content:s[2]}}function b(n){return[n].flat().reduce((e,s)=>[...e,...s.split(E)],[]).filter(_).map(e=>e.replace(O,""))}function _(n){return!x.test(n)}});export default C();
